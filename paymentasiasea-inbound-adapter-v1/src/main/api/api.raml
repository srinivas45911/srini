#%RAML 0.8
title: PaymentAsiaSEA-Inbound-Adapter
version: 1
baseUri: https://services.axicorp.com.au


mediaType: application/json
schemas:
  - ScalarReturn: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type" : "object",
        "properties" : {
          "ReturnValue" : {"type" : "string","description": "The return value for the function"},
          "Message": {"type" : "string","description": "The return value for the function"}
        }
      }


  - postDepositRequest: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type" : "object",
        "properties" : {
          "CustomerId" : {"type" : "string","description": "AxiCorp Unique CRM Customer Number"},
          "OrderId" : {"type" : "integer","description": "AxiCorp Unique Deposit Id","minimum" : 0},
          "ProductId" : {"type" : "integer","description": "Axi Payment Product Id. May need to vary logic for different ids. e.g. credit card vs eWallet payments"},
          "LegalEntity" : {"type" : "string","description": "Axi Legal Entity for the related customer contract. e.g. AxiCorp Limited. Sometimes we need to use different merchantIds for each entity"},
          "Currency" : {"type" : "string","description": "Currency of the deposit","pattern" : "[A-Z]","minLength" : 3,"maxLength" : 3},
          "Amount" : {"type" : "number","description": "Amount of the deposit","minimum" : 0},
          "InstrumentToken" : {"type":"string","description": "For payments that support tokenised payment"},
          "ClientIp" : {"type" : "string","description": "Customer IP Address","minLength" : 1},
          "ClientSessionId" : {"type" : "string","description": "Customer SessionId to assist with log tracing"},
          "SystemSourceId" : {"type" : ["null","integer"],"description": "To assist with log tracing. 5: PartnerPortal, 6: OnboardingPortal "},
          "AdditionalInfo": {
            "type": "object",
            "description": "Additional custom key-value string pairs",
            "properties" : {
            "ClientFirstName": { "type" : "string","minLength" : 1},
            "ClientLastName": { "type" : "string","minLength" : 1},
            "ClientPhone": { "type" : "string","minLength" : 1},
            "ClientAddress": { "type" : "string"},
            "ClientEmail": { "type" : "string","minLength" : 1},
            "ClientState": { "type" : "string"},
            "ClientCountry": { "type" : "string"},
            "ProductSelected": { "type" : "string"}
            },
            "required" : ["ClientFirstName","ClientLastName","ClientPhone","ClientEmail"],            
            "additionalProperties": { "type": ["null","string"] }
          }
        },
        "required" : ["OrderId","Currency","Amount","ClientIp"]
      }

  - postDepositResponse: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type" : "object",
        "properties" : {
          "OrderId" : {"type" : "integer","description": "The unique id of the payment"},
          "ProviderReference"  : {"type" : "string","description": "The unique transaction id from the gateway"},
          "ClientRedirectURL" : {"type" : "string","description": "The url to the hosted payment page of the gateway"},
          "ClientRedirectType" : {"type" : "string", "enum":["NA","GET","POST"]},
          "PostParameters" : {"type" : "string","description": "Optional RAW key value pairs to post to the above url. e.g. field1=x&field2=Y"},
          "PostPayload" : {"type" : "string","description": "Optional custom payload. Usually json."},
          "RecommendedDisplayType" : {"type" : "string","description": "Recommended display mode - Redirect, Popoup or Iframe"},
          "RecommendedDisplayWidth" : {"type" : "number","description": "Recommended width in pixels"},
          "RecommendedDisplayHeight" : {"type" : "number","description": "Recommended height in pixels"},
          "PaymentStatus" : {"type":"string", "enum":["PENDING","ACCEPTED","REJECTED","REDIRECT"],"description": "Payment status. PENDING, ACCEPTED or REJECTED for synchronous payments, REDIRECT for asynchronous"},
          "PaymentCode": {"type" : "string","description": "Gateway specific payment response code. Usually an integer."},
          "PaymentMessage": {"type":"string","description":"Text response from payment gateway"},
          "AdditionalInfo": {
            "type": "object",
            "description": "Additional custom key-value string pairs",
            "properties" : {},
            "additionalProperties": { "type": "string" }
          }
        }
      }
  - checkStatusRequest: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type" : "array",
        "properties" : {
          "OrderId" : {"type" : "integer","description": "The unique id of the payment"},
          "MerchantReference" : {"type" : "string","description": "The reference we used for the gateway (sometimes different or additiona prefix/suffixed orderid)"},
          "ProviderReference": {"type" : "string","description": "Gateway specific reference"}
        }
      }
  - paymentCMF: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type" : "object",
        "properties" : {
          "OrderId" : {"type" : "integer","description": "The unique id of the payment"},
          "ClientIp": {"type" : "string","description": "Customer IP Address"},
          "ProviderReference": {"type" : "string","description": "Gateway specific reference"},
          "ProviderCode": {"type" : "string","description": "Gateway specific payment response code. Usually an integer."},
          "ProviderMessage": {"type":"string","description":"Text response from payment gateway"},
          "ProviderApproved": {"type":"boolean","description":"True for payment Approved, otherwise false"},
          "CurrencyReceived": {"type" : "string","description": "Currency of the received deposit"},
          "AmountReceived": {"type" : "number","description": "Amount of the received deposit"},
          "ClientAccNo": {"type" : "string","description": "Partial CC number or Gateway customer account id or email"},
          "ClientAccName": {"type" : "string","description": "Cardholder or customer name if given"},
          "AVS": {"type" : "string","description": "For credit card AVS (address verification system) value if given. E.g. I for not verified"},
          "Country": {"type" : "string","description": "Country of the instrument if know. Iso A2 code. e.g. 'AU' for Australia"},
          "InstrumentType": {"type" : "string","description": "Used to differentiate between methods on the same gateway."}
        }
      }

  - postWithdrawalsRequest: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type" : "object",
        "properties" : {
          "WithdrawalRequests" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "WithdrawalId" : {"type" : "integer","description": "Out unique id for the payment","minimum" : 0},
                "LegalEntity" : {"type" : "string","description": "Axi Legal Entity for the related customer contract. e.g. AxiCorp Limited. Sometimes we need to use different merchantIds for each entity"},
                "ProviderReference": {"type" : "string","description": "Typically the gateway tranID to be refunded"},
                "Currency": {"type" : "string","description": "Currency of the withdrawal","pattern" : "[A-Z]","minLength" : 3,"maxLength" : 3},
                "Amount": {"type" : "number","description": "Amount of the withdrawal","minimum" : 0},
                "AdditionalInfo": {
                  "type": "object",
                  "description": "Additional custom key-value string pairs that are needed for the gateway",
                  "properties" : {"ClientName":{"type":"string","minLength" : 1},
                                  "BankName":{"type":"string","minLength" : 1},
                                  "ClientAccountNumber":{"type":"string","minLength" : 1}
                                 },
                                 "required":["ClientName","BankName","ClientAccountNumber"],
                  "additionalProperties": { "type": "string" }
                }
              },
              "required":["WithdrawalId","Currency","Amount"]
            }
          }  
        }
      }

  - postWithdrawalsResponse: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type" : "object",
              "properties" : {
                "WithdrawalId" : {"type" : "integer","description": "Out unique id for the payment"},
                "ProviderReference": {"type" : "string","description": "Typically the gateway tranID to be refunded"},
                "Status": {"type" : "string", "enum":["PENDING","SENT","FAILED"]},
                "PayoutReference": {"type" : "string","description": "The gateway transaction id given to the refund or payout"},
                "GatewayResponseCode": {"type" : "string","description": "The gateway code used. Usually numerical. eg. status = 0"},
                "GatewayResponseMessage": {"type" : "string","description": "The gateway message - e.g. Successfully paid out"},
                "Message": {"type" : "string","description": "Further details. Could be a description of why the payment failed"},
                "AdditionalInfo": {
                  "type": "object",
                  "description": "Additional custom key-value string pairs",
                  "properties" : {},
                  "additionalProperties": { "type": "string" }
                }
              }
      }
      
  - createInstrumentRequest: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type" : "object",
        "properties" : {
          "DepositOrderId": {"type" : "integer","description": "OrderId, this may be needed for downstream processes to look up customerId etc"},
          "CustomerId": {"type" : ["integer", "null"],"description": "Customer_Number2__c if available. Otherwise ORderId can be used for lookup."},
          "AccountName": {"type" : ["string", "null"],"description": "Account holder name on instrument"},
          "AccountNumber": {"type" : ["string", "null"],"description": "Account number on instrument"},
          "InstrumentType": {"type" : ["string", "null"],"description": "Card account/eWallet"},
          "InstrumentSubType": {"type" : ["string", "null"],"description": "E.g. Visa/Paypal"},
          "InstrumentIdentifier": {"type" : ["string", "null"],"description": "mypaypalemail@mail.com"},
          "InstrumentExpiryDate": {"type" : ["string", "null"],"description": "Required for cards"},
          "GatewayName": {"type" : ["string", "null"],"description": "E.g. Braintree/Paysafe/NganLuong"},
          "GatewayToken": {"type" : ["string", "null"],"description": "Vault token. Required to enable deposit instrument selection"}
        }
      }



documentation:
  - title: Introduction
    content: |
      API to act as common integration interface between AxiCorp systems and the external gateway - Ngan Luong
      The standard pattern consists of four endpoints -
        post /Deposits
        get  /Deposits/CheckStatus  
        put  /PaymentNotificationToCmf
        post /Withdrawals
      A fifth custom endpoint may be required if the gateway supports http notification callbacks. There 
      are numerous variations for each gateway that mean that this can't be part of the standard patterns.
        e.g. 
        post or get /Notify  --> which would retrieve and pass the parameters to /PaymentNotificationToCmf
        Some gateways use post callbacks and some use get. Some use form-url-encoded parameters and standard post params... etc

/Deposits:
  description: Represents the resource for deposit requests aka orders aka sales
  post:
    description: Create a new deposit record with the gateway. Returns the status of the payment or client redirection values.
    body:
      schema: postDepositRequest
      example: |
        {
           "CustomerId": "1198765450081",
          "OrderId": 98765,
          "ProductId": 287,
          "LegalEntity": "AxiCorp Limited",
          "Currency": "VND",
          "Amount": 1000.12,
          "ClientIp": "201.36.21.45",
          "ClientSessionId": "QWE!@#wasdferty",
          "SystemSourceId": 6,
          "InstrumentToken": "",
          "AdditionalInfo": {
            "ClientFirstName": "Someone",
            "ClientLastName": "Buying",
            "ClientPhone": "9876543223",
            "ClientAddress": "1,Bay Street",
            "ClientEmail": "someone@gmail.com",
            "ClientCountry": "US",
            "ClientState": "NY",
            "ProductSelected": "DebitCard"
  
          }
        }
    responses:
      201:
          description: Deposit request persisted successfully
          body:
            application/json:
              schema: postDepositResponse
              

            application/json-sync-example:
              example: |
                {
                  "OrderId": 1198765450081,
                  "ProviderReference": "",
                  "ClientRedirectURL": "https://payment.pa-sys.com/app/ page/3f032457-c233-42d4-b7b4-3b1612d59b02",
                  "ClientRedirectType": "POST",
                  "PostParameters": "amount=1000.000&currency=VND&customer_address=1,Bay Street&customer_country=US&customer_email=someone@gmail.com&customer_first_name=Someone&customer_ip=123.123.123.123&customer_last_name=Buying&customer_phone=9876543223&customer_state=NY&merchant_reference=1198765450081&network=CreditCard&return_url=https://demo.shop.com/payment/return&sign=58ae93180c8f81595228f4051c5745314211e7578e76c39d4172b8103c5bc932aebc2a4289e95792cee9df959b63eba11168cdb955ae960adff038d328ae97d9",
                  "PostPayload": "",
                  "RecommendedDisplayType": "Redirect",
                  "RecommendedDisplayWidth": 0,
                  "RecommendedDisplayHeight": 0,
                  "PaymentStatus": "REDIRECT",
                  "PaymentCode": "",
                  "PaymentMessage": "",
                  "AdditionalInfo": {}
                }

  /CheckStatus:
    description: |
       Request to get the status of one or more pending deposits. Return the status of all deposits 
       and also call PaymentNotificationToCmf() for any approved or declined results.
    post:
     description: checkstatus method
     body:
      schema: checkStatusRequest
      example: |
        [
          {
            "OrderId" : "7220",
            "MerchantReference" : "7220",
            "ProviderReference" : "52743-c4b9f3075b60bafb1f7236df34b2f278"
          }
        ]
     responses:
       201:
           description: Parsed CMF
           body:
              schema: ScalarReturn
              example: |
                {         
                  "ReturnValue": "True",        
                  "Message": ""    
                }
/Notify:
  description: | 
    Takes gateway notification parameters as input, returns the CMF (common message format)
    Scenario 1 use - if the gateway supports an http callback notification, implement that endpoint and pass the parameters to this endpoint
    Scenario 2 use - if the gateway has to be polled for transation status, /CheckStatus is used and will pass the payload to this endpoint
  post:
    description: Parse notification parameters, map and publish to CMF queue, and return the CMF payload
    body:
      application/x-www-form-urlencoded:
       example: |
        {
          "gatewayspecificfieldx" : "x",
          "gatewayspecificfieldy" : "y",
          "gatewayspecificfieldz" : "z",
          "payment_ccy" : "USD",
          "payment_amount" : 73.57,
          "etc": "etc..."
        }
    responses:
      201:
          description: ScalarReturn
          body:
           text/plain:
            example: |
                22bd8aaa8104eeaaf21138eddbd47738fe7cc519258f9a398fe20389dcc17579f1b7786698d6a210abdb533f61d90a7292db1a782cfd1338d6a17f8da445fd41

                
/Withdrawals:
  post:
    description: |
      Process a list of withdrawal requests. 
      Scenario 1 - Will iterate through each request and call the corresponding refund/payout or payout API
      Scenario 2 - Return a gateway specific batch file (usually csv or xls). The file will be used to manually upload the requests to the gateway portal.
    body:
      schema: postWithdrawalsRequest
      example: |
          {
            "WithdrawalRequests": [
              {
                 "WithdrawalId": 15164931122194,
                 "LegalEntity" : "AxiCorp Financial Services Pty Ltd",
                 "ProviderReference": "123xyz",
                 "Currency": "IDR",
                 "Amount": 10000000.00,
                 "AdditionalInfo": {"ClientName": "Stephen test","BankName": "Bank BRI","ClientAccountNumber": "1241414141"}
              },
              {
                 "WithdrawalId": 151649311224578,
                 "LegalEntity" : "AxiCorp Financial Services Pty Ltd",
                 "ProviderReference": "124xyz",
                 "Currency": "MYR",
                 "Amount": 300.00,
                 "AdditionalInfo": {"ClientName": "Stephen test","BankName": "Hong Leong","ClientAccountNumber": "1241414141"}
              }
            ]
          }
          
    responses:
      201:
          body:
            schema: ScalarReturn
            example: |
              {                      
                "ReturnValue": "Queued",                  
                "Message": "DEV.q.PT88.withdrawal.request.v1"  
              } 